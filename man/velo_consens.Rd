% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/velo_consens.R
\name{velo_consens}
\alias{velo_consens}
\title{Implement consensus velocity for inference of a single gene}
\usage{
velo_consens(u.obs, s.obs, k.inits, empirical, epsilon=1e-3, alpha1.sd, gamma.sd, t0.sd,
   lambda.lower=0, lambda.upper=8, seed, prep_niter, prep_burn_in=0, prep_thinning=1,
   comp_niter, comp_burn_in=0, comp_thinning=1, n_cores=30, n_chains=100)
}
\arguments{
\item{u.obs}{a vector of observed unspliced counts.}

\item{s.obs}{a vector of observed spliced counts.}

\item{k.inits}{a matrix of initial values for the state. Each column corresponds to one set of initial values, with rows corresponding to cells.
Can use the output from \code{generate_k}.}

\item{empirical}{output from \code{get_empirical}.}

\item{epsilon}{a small positive value used to compute empirical \eqn{\tau}. Better to use the same value as used in \code{get_empirical}.}

\item{alpha1.sd}{standard deviation in the truncated normal prior for \eqn{\alpha_1^{(1)}}.}

\item{gamma.sd}{standard deviation in the truncated normal prior for \eqn{\gamma}.}

\item{t0.sd}{standard deviation in the Gamma prior for the switching point \eqn{t_0^{(2)}}.}

\item{lambda.lower, lambda.upper}{the lower and upper bound in the Uniform prior for \eqn{\lambda}.}

\item{seed}{a vector of values used as seed for each chain. Must be of the same length as the number of chains.}

\item{prep_niter, comp_niter}{integer. Total number of MCMC iterations for the preparation step and complete step.}

\item{prep_burn_in, comp_burn_in}{the length of burn-in period during MCMC for the preparation step and complete step.}

\item{prep_thinning, comp_thinning}{the thinning applied after burn-in period for the preparation step and complete step.}

\item{n_cores}{number of cores used for parallel computing.}

\item{n_chains}{number of chains to run.}
}
\value{
The output is a list of results for all chains. Within each list, it contains the following components for each chain:
\item{output_index}{total number of saved MCMC samples, taking into account of burn-in and thinning.}
\item{k_output}{a list of vectors for sampled states. The list is of length \code{output_index}.}
\item{p_output}{a vector of sampled hyper-parameters \eqn{p}. The vector is of length \code{output_index}.}
\item{alpha1_1_output}{a vector of sampled rates \eqn{\alpha_1^{(1)}}. The vector is of length \code{output_index}.}
\item{gamma_output}{samples for rates \eqn{\gamma}. Similar to \code{alpha1_1_output}.}
\item{tau_output}{samples for local time \eqn{\tau}. Similar to \code{k_output}.}
\item{t0_output}{samples for switching point \eqn{t_0^{(2)}}.}
\item{lambda_output}{samples for \eqn{\lambda}.}
\item{u01_output}{samples for initial condition \eqn{u_0^{(1)}}.}
\item{sigma_u_2_output, sigma_s_2_output}{samples for variance parameters for unspliced and spliced counts.}
\item{mu_tau_output}{a list of vectors for sampled hyper-parameters \eqn{\mu_{\tau,j}} for \eqn{j=1,2}. The list is of length \code{output_index}.}
\item{var_tau_output}{samples for hyper-parameters \eqn{\sigma^2_{\tau,j}} for \eqn{j=1,2}. Similar to \code{mu_tau_output}.}
\item{mus_output}{a list of length \code{output_index}. Each element of the list is a list of two vectors saving samples of \eqn{u(t), s(t)} from the ODE.}
\item{acceptance_count_avg}{average acceptance probabilities over iterations for parameters drawn using adaptive Metroplis-Hastings.}
\item{log_like, log_post}{log-likelihood and log-posterior at each iteration (ignoring burnin and thinning).}
\item{mu_alpha, sig_alpha}{prior mean and standard deviation for \eqn{\alpha_1^{(1)}}.}
\item{mu_gamma, sig_gamma}{prior mean and standard deviation for \eqn{\gamma}.}
\item{mu_star_base, sig_star_base}{prior mean and standard deviation for \eqn{\mu_{\tau,j}} for \eqn{j=1,2}.}
\item{eta_base, nu_base}{prior mean and standard deviation for \eqn{\sigma^2_{\tau,j}} for \eqn{j=1,2}.}
\item{mu_0, var_0}{prior mean and variance for \eqn{t_0^{(2)}}.}
\item{lambda_lower, lambda_upper}{the lower and upper bound in the Uniform prior for \eqn{\lambda}.}
\item{u01_lower, u01_upper}{the lower and upper bound in the Uniform prior for \eqn{u_0^{(1)}}.}
\item{sigma_u_2_hat, sigma_s_2_hat, invgamma_f}{prior parameters in the inverse-gamma prior for variance parameters.}
}
\description{
The function runs multiple chains in parallel to infer unknown parameters for a single gene,
including a preparation step to find good initial values where states are fixed to empirical values.
}
\examples{
set.seed(4343)
seed <- sample(1:1e5,size=Width)
consensus_result <- velo_consens(u.obs = u.obs, s.obs = s.obs,
  k.inits = k.inits, empirical = empirical, epsilon = 1e-3, alpha1.sd = 5,
  gamma.sd = 0.4, t0.sd = 3, lambda.lower = 0.3, lambda.upper = 8,
  seed = seed, prep_niter = 10, prep_burn_in = 0, prep_thinning = 1,
  comp_niter = Depth, comp_burn_in = 0, comp_thinning = 1, n_cores = 3, n_chains = Width)
}
